<Playlist Version="1.0"><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationBasic_v_0_9_6.WriteRequest_OnGetLines_ShouldReturnNewLineSeparatedPoints" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationBasic_v_0_9_6.ClientQuery_OnInvalidQuery_ShouldThrowException" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationContinuousQueries_v_0_9_6.CreateContinuousQuery_OnNonExistingMeasurement_ShouldCreateContinuousQuery" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationSerie_v_0_9_6.GetMeasurements_OnExistingSeries_ShouldReturnMeasurementCollection" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationBasic_v_0_9_6.ClientQueryMultiple_WithOneExistantSeriesQuery_ShouldReturnSingleSerie" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationDiagnostics_v_0_9_6.GetDiagnostics_ShouldReturnDbDiagnostics" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationContinuousQueries_v_0_9_6.Backfill_OnValidBackfillObject_ShouldReturnSuccess" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationBasic_v_0_9_6.Formatter_OnGetLineTemplate_ShouldFormatPoint" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationBasic_v_0_9_6.ClientWrite_OnValidPointsToSave_ShouldWriteSuccessfully" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationBasic_v_0_9_6.ClientQuery_OnWhereClauseNotMet_ShouldReturnEmptySerieCollection" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationContinuousQueries_v_0_9_6.GetContinuousQueries_OnNonExistingCq_ShouldReturnEmptyCqCollection" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationSerie_v_0_9_6.GetSeries_OnNoSeries_ShouldReturnEmptyCollection" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationBasic_v_0_9_6.ClientQuery_OnNonExistantSeries_ShouldReturnEmptySerieCollection" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationDiagnostics_v_0_9_6.GetStats_ShouldReturnDbStats" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationBasic_v_0_9_6.ClientMultiQuery_OnExistingPoints_ShouldReturnSerieResultCollection" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationContinuousQueries_v_0_9_6.GetContinuousQueries_OnExistingCq_ShouldReturnCqs" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationContinuousQueries_v_0_9_6.CreateContinuousQuery_OnExistingMeasurement_ShouldCreateContinuousQuery" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationDiagnostics_v_0_9_6.Ping_ShouldReturnVersion" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationContinuousQueries_v_0_9_6.CreateContinuousQuery_OnExistingCqName_NotCreateDuplicateContinuousQuery" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationBasic_v_0_9_6.ClientWrite_OnPointsWithMissingFields_ShouldThrowException" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationBasic_v_0_9_6.ClientQuery_OnExistingPoints_ShouldReturnSerieCollection" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationSerie_v_0_9_6.GetMeasurements_OnNoSeries_ShouldReturnEmptyCollection" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationContinuousQueries_v_0_9_6.CreateContinuousQuery_OnExistingCqName_ShouldThrow" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationBasic_v_0_9_6.ClientMultiQuery_WithOneExistantSeriesQuery_ShouldReturnEmptyAndPopulatedSeries" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationSerie_v_0_9_6.GetSeries_OnExistingSeries_ShouldReturnSerieSetCollection" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationBasic_v_0_9_6.ClientQueryMultiple_OnExistingPoints_ShouldReturnSerieCollection" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationContinuousQueries_v_0_9_6.DeleteContinuousQuery_OnNonExistingCq_ShouldNotThrow" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationDatabase_v_0_9_6.Database_OnCreateAndDrop_ShouldReturnSuccess" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationContinuousQueries_v_0_9_6.DeleteContinuousQuery_OnNonExistingCq_ShouldThrow" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationDatabase_v_0_9_6.GetDatabase_OnDatabaseExists_ShouldReturnDatabaseCollection" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationContinuousQueries_v_0_9_6.CreateContinuousQuery_WithResampleStatement_ShouldCreateContinuousQuery" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationContinuousQueries_v_0_9_6.DeleteContinuousQuery_OnExistingCq_ShouldReturnSuccess" /><Add Test="InfluxData.Net.Integration.InfluxDb.Tests.IntegrationBasic_v_0_9_6.ClientQuery_OnNonExistantFields_ShouldReturnEmptySerieCollection" /><Add Test="InfluxData.Net.Integration.Kapacitor.Tests.IntegrationTask_v_0_10_1.DefineTask_OnInvalidTickScriptSpecified_ShouldThrowException" /><Add Test="InfluxData.Net.Integration.Kapacitor.Tests.IntegrationTask_v_0_10_1.EnableTask_OnExistingTask_ShouldEnableSuccessfully" /><Add Test="InfluxData.Net.Integration.Kapacitor.Tests.IntegrationTask_v_0_10_1.GetTask_OnNonExistingTask_ShouldThrowException" /><Add Test="InfluxData.Net.Integration.Kapacitor.Tests.IntegrationTask_v_0_10_1.DisableTask_OnExistingTask_ShouldDisableSuccessfully" /><Add Test="InfluxData.Net.Integration.Kapacitor.Tests.IntegrationTask_v_0_10_1.DefineTask_OnNoTaskIdSpecified_ShouldThrowException" /><Add Test="InfluxData.Net.Integration.Kapacitor.Tests.IntegrationTask_v_0_10_1.DefineTask_OnValidArguments_ShouldDefineSuccessfully" /><Add Test="InfluxData.Net.Integration.Kapacitor.Tests.IntegrationTask_v_0_10_1.GetTask_OnExistingTask_ShouldReturnTask" /><Add Test="InfluxData.Net.Integration.Kapacitor.Tests.IntegrationTask_v_0_10_1.DefineTask_OnNoTickScriptSpecified_ShouldThrowException" /><Add Test="InfluxData.Net.Integration.Kapacitor.Tests.IntegrationTask_v_0_10_1.GetTasks_OnExistingTask_ShouldReturnTaskCollection" /><Add Test="InfluxData.Net.Integration.Kapacitor.Tests.IntegrationTask_v_0_10_1.EnableTask_OnNonExistingTask_ShouldThrowException" /><Add Test="InfluxData.Net.Integration.Kapacitor.Tests.IntegrationTask_v_0_10_1.DeleteTask_OnExistingTask_ShouldDeleteSuccessfully" /></Playlist>